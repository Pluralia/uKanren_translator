:: appendoY x xy y = conde
  (x === [] /\ xy === y)
  ([h t ty:
     x === h % t /\ xy === h % ty /\ {appendoY t ty y}])

----------------------------------------------------------------------------------------------------
-- result of calling function is ctor --------------------------------------------------------------
----------------------------------------------------------------------------------------------------

:: maxo1 x n m = conde
  (x === [] /\ m === n)
  ([h t z:
     x === h % t /\ {leo h n trueo} /\ {maxo1 t n m}])
  ([h t z:
     x === h % t /\ {gto h n trueo} /\ {maxo1 t h m}])

----------------------------------------------------------------------------------------------------
-- predicates --------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------

:: listo x = conde
  (
      x === [])
  ([h t:
      x === h % t
   /\ {listo t}])

:: membero x list =
  [h t:
    (list === h % t) /\ ((x === h) \/ {membero x t})]

:: inBotho x ys zs =
  {membero x ys} /\ {membero x zs}

:: nilo l =
  l === []

:: singletono l x =
  l === x % []

