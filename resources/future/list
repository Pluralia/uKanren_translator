:: listo x =
  (x ~ []) \/
  [h t:
    x ~ h % t /\ {listo t}]

:: membero x list =
  [h t:
    (list ~ h % t) /\ ((x ~ h) \/ {membero x t})]

:: inBotho x ys zs =
  {membero x ys} /\ {membero x zs}

:: nilo l =
  l ~ []

:: singletono l x =
  l ~ x % []

:: maxLengtho x m l =
  {maxo x m} /\ {lengtho x l}

:: copy l c = conde
  (l ~ [] /\ c ~ [])
  ([h t t1:
     l ~ h % t /\ c ~ h % t1 /\ {copy t t1}])

:: copy2 l c = conde
  (l ~ [] /\ c ~ [])
  ([h:
     l ~ h % [] /\ c ~ h % []])
  ([h1 h2 t t1:
     l ~ h1 % h2 % t /\ c ~ h1 % t1 /\ {copy2 t t1}])

:: copycopy l l1 l2 =
  {copy l l1} /\ {copy2 l l2}

:: lengtho x l = conde
  (x ~ [] /\ l ~ zero)
  ([h t z:
     x ~ h % t /\ l ~ succ z /\ {lengtho t z}])

:: maxo x m =
  {maxo1 x zero m}

:: maxo1 x n m = conde
  (x ~ [] /\ m ~ n)
  ([h t z:
     x ~ h % t /\ {leo h n trueo} /\ {maxo1 t n m}])
  ([h t z:
     x ~ h % t /\ {gto h n trueo} /\ {maxo1 t h m}])

:: appendo x y xy = conde
  (x ~ [] /\ xy ~ y)
  ([h t ty:
     x ~ h % t /\ xy ~ h % ty /\ {appendo t y ty}])

:: appendo1 x y xy = conde
  (x ~ [] \/ xy ~ y)
  ([h t ty:
     x ~ h % t \/ xy ~ h % ty \/ {appendo1 t y ty}])

:: reverso x y = conde
  (x ~ [] /\ y ~ [])
  ([h t rt :
     x ~ h % t /\ {reverso t rt} /\ {appendo rt (h % []) y}])

:: revacco xs acc sx = conde
  (xs ~ [] /\ sx ~ acc)
  ([h t:
     xs ~ h % t /\ {revacco t h % acc sx}])

